//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Emux.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.7.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://github.com/Washi1337/Emux")]
        public string Repository {
            get {
                return ((string)(this["Repository"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("NearestNeighbor")]
        public global::System.Windows.Media.BitmapScalingMode VideoBitmapScalingMode {
            get {
                return ((global::System.Windows.Media.BitmapScalingMode)(this["VideoBitmapScalingMode"]));
            }
            set {
                this["VideoBitmapScalingMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Uniform")]
        public global::System.Windows.Media.Stretch VideoStretchMode {
            get {
                return ((global::System.Windows.Media.Stretch)(this["VideoStretchMode"]));
            }
            set {
                this["VideoStretchMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ForceOriginalGameBoy {
            get {
                return ((bool)(this["ForceOriginalGameBoy"]));
            }
            set {
                this["ForceOriginalGameBoy"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#FFE0F8D0")]
        public global::System.Windows.Media.Color GBColor0 {
            get {
                return ((global::System.Windows.Media.Color)(this["GBColor0"]));
            }
            set {
                this["GBColor0"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#FF88C070")]
        public global::System.Windows.Media.Color GBColor1 {
            get {
                return ((global::System.Windows.Media.Color)(this["GBColor1"]));
            }
            set {
                this["GBColor1"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#FF346856")]
        public global::System.Windows.Media.Color GBColor2 {
            get {
                return ((global::System.Windows.Media.Color)(this["GBColor2"]));
            }
            set {
                this["GBColor2"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#FF081820")]
        public global::System.Windows.Media.Color GBColor3 {
            get {
                return ((global::System.Windows.Media.Color)(this["GBColor3"]));
            }
            set {
                this["GBColor3"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<Key>X</Key>")]
        public global::System.Windows.Input.Key KeyBindingA {
            get {
                return ((global::System.Windows.Input.Key)(this["KeyBindingA"]));
            }
            set {
                this["KeyBindingA"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<Key>LeftShift</Key>")]
        public global::System.Windows.Input.Key KeyBindingSelect {
            get {
                return ((global::System.Windows.Input.Key)(this["KeyBindingSelect"]));
            }
            set {
                this["KeyBindingSelect"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<Key>Up</Key>")]
        public global::System.Windows.Input.Key KeyBindingUp {
            get {
                return ((global::System.Windows.Input.Key)(this["KeyBindingUp"]));
            }
            set {
                this["KeyBindingUp"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<Key>Down</Key>")]
        public global::System.Windows.Input.Key KeyBindingDown {
            get {
                return ((global::System.Windows.Input.Key)(this["KeyBindingDown"]));
            }
            set {
                this["KeyBindingDown"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<Key>Left</Key>")]
        public global::System.Windows.Input.Key KeyBindingLeft {
            get {
                return ((global::System.Windows.Input.Key)(this["KeyBindingLeft"]));
            }
            set {
                this["KeyBindingLeft"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<Key>Right</Key>")]
        public global::System.Windows.Input.Key KeyBindingRight {
            get {
                return ((global::System.Windows.Input.Key)(this["KeyBindingRight"]));
            }
            set {
                this["KeyBindingRight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<Key>Return</Key>")]
        public global::System.Windows.Input.Key KeyBindingStart {
            get {
                return ((global::System.Windows.Input.Key)(this["KeyBindingStart"]));
            }
            set {
                this["KeyBindingStart"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<Key>Z</Key>")]
        public global::System.Windows.Input.Key KeyBindingB {
            get {
                return ((global::System.Windows.Input.Key)(this["KeyBindingB"]));
            }
            set {
                this["KeyBindingB"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("320")]
        public int VideoWidth {
            get {
                return ((int)(this["VideoWidth"]));
            }
            set {
                this["VideoWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("288")]
        public int VideoHeight {
            get {
                return ((int)(this["VideoHeight"]));
            }
            set {
                this["VideoHeight"] = value;
            }
        }
    }
}
